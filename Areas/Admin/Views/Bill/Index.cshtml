@model IEnumerable<AutoServiceMVC.Models.Order>
@inject ICommonRepository<Status> statusService
@{
    ViewData["Title"] = "Order Management";
    var result = await statusService.GetAllAsync();
    var dropdownlist = new SelectList((IEnumerable<Status>)result.Data, "StatusId", "StatusName");
}

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Orders List</h6>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.OrderId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CreatedAt)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Table)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.User)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Employee)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Amount)
                        </th>
                        <th>
                            Status
                        </th>
                        <th class="text-center">
                            Action
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr class="item">
                            <td>
                                <a asp-action="Details" asp-route-id="@item.OrderId"
                                   class="font-weight-bold">
                                    @Html.DisplayFor(modelItem => item.OrderId)
                                </a>
                            </td>
                            <td scope="col">
                                @Html.DisplayFor(modelItem => item.CreatedAt)
                            </td>
                            <td scope="col">
                                @Html.DisplayFor(modelItem => item.Table.TableName)
                            </td>
                            <td scope="col">
                                @Html.DisplayFor(modelItem => item.User.FullName)
                            </td>
                            <td scope="col">
                                @Html.DisplayFor(modelItem => item.Employee.FullName)
                            </td>
                            <td scope="col">
                                @Html.DisplayFor(modelItem => item.Amount)
                            </td>
                            <td scope="col">
                                <span class="@item.Status.StatusName.ToLower()">@Html.DisplayFor(modelItem => item.Status.StatusName)</span>
                            </td>
                            <td class="text-center">
                                <button class="btn btn-circle btn-secondary tm-product-delete-link" @((item.Status.StatusId > 3) ? "disabled" : "")
                                   title="Update status" onclick="updatestatus(@item.OrderId, this);">
                                    <i class="fas fa-arrow-up tm-product-delete-icon"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section scripts {
    <script>
        function updatestatus(orderId, clickedItem) {
            $.ajax({
                url: '/Admin/Order/UpdateStatus',
                type: 'POST',
                data: { orderId: orderId },
                success: function (response) {
                    console.log('Update status!');

                    var row = clickedItem.closest(".item");

                    console.log(response);

                    row.setAttribute("data-status", response.statusId);
                    var statusCell = row.querySelector(".tm-status-circle");
                    var statusText = row.querySelector("span");

                    // Update the status circle and status text
                    statusCell.className = "tm-status-circle " + response.statusName.toLowerCase();
                    statusText.textContent = response.statusName;

                    if(response.statusId > 3){
                        row.querySelector(".tm-product-delete-link").className += " achor-disable";
                    }

                    loadContent();
                },
                error: function (xhr, status, error) {
                    // Handle the error response
                    console.log('Error update status: ' + error);
                }
            });
        }
    </script>
}