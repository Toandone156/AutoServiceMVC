@model IEnumerable<AutoServiceMVC.Models.Product>
@inject ICommonRepository<Category> categoryService
@using System.Security.Claims

@{
    ViewData["Title"] = "Product Management";
    var result = await categoryService.GetAllAsync();
    var dropdownlist = new SelectList((IEnumerable<Category>)result.Data, "CategoryId", "CategoryName");
    var role = User.FindFirstValue(ClaimTypes.Role);
}

<div class="card shadow mb-4">
    <div class="card-header py-3 d-flex justify-content-between">
        <div class="h6 font-weight-bold text-primary align-self-center">Product Management</div>
        @if(role == "Admin")
        {
            <a asp-action="Create" class="btn btn-success btn-icon-split mt-2">
                <span class="text">Create</span>
                <span class="icon text-white-50">
                    <i class="fas fa-plus"></i>
                </span>
            </a>
        }
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.ProductName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Price)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Category)
                        </th>
                        <th>
                            View
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr class="item">
                            <td scope="col">
                                <a asp-action="Details" asp-route-id="@item.ProductId"
                                   class="font-weight-bold">
                                    @Html.DisplayFor(modelItem => item.ProductName)
                                </a>
                            </td>
                            <td scope="col">
                                @item.Price.ToString("N0") ₫
                            </td>
                            <td scope="col">
                                @(item.Category?.CategoryName ?? "")
                            </td>
                            <td class="text-center">
                                <button class="tm-product-delete-link btn btn-circle btn-secondary"
                                   title="Change stock" onclick="updateStock(@item.ProductId, this);">
                                    <i class="tm-product-delete-icon far @(item.IsInStock ? "fa-eye" : "fa-eye-slash")"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

@section scripts {
    <script>
        function updateStock(productId, clickedItem) {
            $.ajax({
                url: '/Admin/Product/UpdateStock',
                type: 'POST',
                data: { productId: productId },
                success: function (response) {
                    console.log('Update status!');

                    var row = clickedItem.closest(".item");

                    console.log(response);

                    row.querySelector(".tm-product-delete-icon").className = response.stockValue ? 
                                                                            "tm-product-delete-icon far fa-eye" : 
                                                                            "tm-product-delete-icon far fa-eye-slash";

                    row.setAttribute("data-stock", response.stockValue);
                },
                error: function (xhr, status, error) {
                    // Handle the error response
                    console.log('Error update status: ' + error);
                }
            });
        }
    </script>
}